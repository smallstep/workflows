on:
  workflow_call:
    inputs:
      cosign-version:
        required: false
        type: string
        default: 'v2.2.3'
      enable-packages-upload:
        required: false
        type: boolean
        default: false
      goprivate:
        required: false
        type: string
        default: go.step.sm,github.com/smallstep
      go-version:
        required: false
        type: string
        default: 'stable'
      is-prerelease:
        required: false
        type: boolean
        default: true
      os-dependencies:
        required: false
        type: string
      runs-on:
        required: false
        type: string
        default: 'ubuntu-latest'
    secrets:
      SSH_PRIVATE_KEY:
        required: false
      GORELEASER_PAT:
        required: true
      GORELEASER_KEY:
        required: true
      PAT:
        required: false
      AWS_S3_BUCKET:
        required: false
      AWS_S3_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      GPG_PRIVATE_KEY:
        required: false
      GPG_PRIVATE_KEY_PASSWORD:
        required: false
      GOOGLE_CLOUD_WORKLOAD_IDENTITY_PROVIDER:
        required: false
      GOOGLE_CLOUD_GITHUB_SERVICE_ACCOUNT:
        required: false
      GOOGLE_CLOUD_PACKAGES_PROJECT_ID:
        required: false


jobs:
  goreleaser:
    name: Upload Assets To Github w/ goreleaser
    runs-on: ${{ inputs.runs-on }}
    permissions:
      id-token: write
      contents: write
      packages: write
    env:
      GOPRIVATE: ${{ inputs.goprivate }}
      GPG_PRIVATE_KEY_FILE: "0x889B19391F774443-Certify.key"
    steps:
      - name: Set IS_PRERELEASE
        run: echo "IS_PRERELEASE=${{ inputs.is-prerelease }}" >> "$GITHUB_ENV"
      - name: Install Dependencies # Some dependencies require this package
        if: ${{ inputs.os-dependencies != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install ${{ inputs.os-dependencies }}
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '${{ inputs.go-version }}'
          check-latest: true
      - name: Setup SSH key for private dependencies
        uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        if: ${{ env.SSH_PRIVATE_KEY != '' }}
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Reconfigure Git for private repos
        env:
          PAT: ${{ secrets.PAT }}
        if: ${{ env.PAT != '' }}
        run: |
          git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf git+ssh://git@github.com
          git config --global url.git@github.com:.insteadOf https://github.com/
      - name: Install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
        with:
          cosign-release: '${{ inputs.cosign-version }}'
      - name: Get Release Date
        id: release_date
        run: |
          RELEASE_DATE=$(date -u +"%y-%m-%d")
          echo "RELEASE_DATE=${RELEASE_DATE}" >> "${GITHUB_ENV}"
      - name: Authenticate to Google Cloud
        if: inputs.enable-packages-upload
        id: gcloud-auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GOOGLE_CLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_CLOUD_GITHUB_SERVICE_ACCOUNT }}
      - name: Set up Google Cloud SDK
        if: inputs.enable-packages-upload
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_CLOUD_PACKAGES_PROJECT_ID }}
      - name: Write GPG private key to file
        if: inputs.enable-packages-upload
        run: |
          echo "${GPG_PRIVATE_KEY}" > "${GPG_PRIVATE_KEY_FILE}"
        shell: bash
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Run GoReleaser Pro
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser-pro
          version: "v2.10.2"
          args: release --clean
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GORELEASER_PAT }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          NFPM_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}
          RELEASE_DATE: ${{ env.RELEASE_DATE }}
