on:
  workflow_call:
    inputs:
      os-dependencies:
        required: false
        type: string
      goprivate:
        required: false
        type: string
        default: go.step.sm,github.com/smallstep
      golangci-lint-version:
        required: false
        type: string
        default: latest
      golangci-lint-args:
        required: false
        type: string
        default: '--timeout=30m'
      skip-go-generate:
        required: false
        type: boolean
        default: false
      skip-go-mod-tidy:
        required: false
        type: boolean
        default: true
    secrets:
      SSH_PRIVATE_KEY:
        required: false
      PAT:
        required: false

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: ${{ inputs.goprivate }}
    steps:
      - name: Install Dependencies # Some dependencies require this package
        if: ${{ inputs.os-dependencies != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install ${{ inputs.os-dependencies }}
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Setup SSH key for private dependencies
        uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        if: ${{ env.SSH_PRIVATE_KEY != '' }}
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Configure Linter
        if:  ${{ hashFiles('.golangci.yml', '.golangci.yaml', '.golangci.toml', '.golangci.json') == '' }}
        run: |
          curl -O https://raw.githubusercontent.com/smallstep/workflows/main/.golangci.yml
      - name: Reconfigure Git for private repos
        env:
          PAT: ${{ secrets.PAT }}
        if: ${{ env.PAT != '' }}
        run: |
          git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf git+ssh://git@github.com
          git config --global url.git@github.com:.insteadOf https://github.com/
      - name: Check that go.mod is tidied
        if: inputs.skip-go-mod-tidy == false
        run: go mod tidy -diff
      - name: Run Linter
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        if: success() || failure() # run this step even if the previous one failed
        with:
          version: ${{ inputs.golangci-lint-version }}
          args: '${{ inputs.golangci-lint-args }}'
          verify: true
      - name: Run go generate
        if: ( success() || failure() ) && !inputs.skip-go-generate
        run: |
          # delete all go-generated files (that adhere to the comment convention); protobuf code is excluded, because its output is (currently) not fully controlled by tools.go
          git ls-files -z | grep --include \*.go --exclude \*.pb.go -lrIZ "^// Code generated .* DO NOT EDIT\.$" | tr '\0' '\n' | xargs rm -f
          # now generate everything
          go generate ./...
          # check if any files were changed
          git diff --exit-code || (
              echo "Generated files are not up to date. Please run 'go generate ./...' and commit the changes."
              exit 1
          )
