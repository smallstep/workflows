on:
  workflow_call:
    inputs:
      goprivate:
        required: false
        type: string
        default: go.step.sm,github.com/smallstep
      gotestsum-version:
        required: false
        type: string
        default: '1.11.0'
      only-latest-golang:
        required: false
        type: boolean
        default: true
      os-dependencies:
        required: false
        type: string
      run-codecov:
        required: false
        type: boolean
        default: true
      setup-bats:
        required: false
        type: boolean
        default: false
      test-command:
        required: false
        type: string
        default: 'gotestsum -- -coverpkg=./... -coverprofile=coverage.out -covermode=atomic ./...'
    secrets:
      PAT:
        required: false
      CODECOV_TOKEN:
        required: false

jobs:
  set-go-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-output.outputs.matrix }}
    steps:
      -
        name: Set go-matrix latest version
        id: set-matrix-latest
        if: inputs.only-latest-golang
        run: |
          echo 'matrix={"include":[{"go":"\"stable\""}]}' >> "${GITHUB_ENV}"
      -
        name: Set default go-matrix
        id: set-matrix-default
        if: inputs.only-latest-golang == false
        run: |
          echo 'matrix={"include":[{"go":"\"stable\""},{"go":"\"oldstable\""}]}' >> "${GITHUB_ENV}"
      -
        id: set-output
        run: |
          echo "matrix=${{ env.matrix }}" >> "${GITHUB_OUTPUT}"

  test:
    needs: set-go-matrix
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: ${{ inputs.goprivate }}
    strategy:
      matrix: ${{ fromJson(needs.set-go-matrix.outputs.matrix) }}
    steps:
      -
        name: Install Dependencies
        if: inputs.os-dependencies != ''
        run: |
          sudo apt-get install ${{ inputs.os-dependencies }}
      -
        name: Checkout w/ PAT
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        env:
          PAT: ${{ secrets.PAT }}
        if: ${{ env.PAT != '' }}
        with:
          submodules: true
          token: ${{ secrets.PAT }}
      -
        name: Checkout w/out PAT
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        env:
          PAT: ${{ secrets.PAT }}
        if: ${{ env.PAT == '' }}
        with:
          submodules: true
      -
        name: Reconfigure for Git go.step.sm
        env:
          PAT: ${{ secrets.PAT }}
        if: env.PAT != ''
        run: |
          git config --global --add url."https://${{ secrets.PAT }}@github.com/smallstep/".insteadOf https://github.com/smallstep/
          git config --global --add url."https://${{ secrets.PAT }}@github.com/smallstep/".insteadOf git+ssh://git@github.com/smallstep/
      -
        name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
          cache: true
      -
        name: Install gotestsum
        run: |
          go install gotest.tools/gotestsum@v${{ inputs.gotestsum-version }}
      -
        name: Setup BATS
        if: inputs.setup-bats
        uses: mig4/setup-bats@af9a00deb21b5d795cabfeaa8d9060410377686d # v1.2.0
        with:
          bats-version: 1.9.0
      -
        name: Run Test Suite
        run: ${{ inputs.test-command }}
        env:
          GOTESTSUM_JSONFILE: gotestsum.json
          GOEXPERIMENT: nocoverageredesign
      -
        name: Annotate Test Suite Results
        if: ${{ (success() || failure()) && hashFiles('gotestsum.json') != '' }}
        uses: guyarb/golang-test-annotations@2941118d7ef622b1b3771d1ff6eae9e90659eb26 # v0.8.0
        with:
          test-results: gotestsum.json
      -
        name: Codecov
        uses: codecov/codecov-action@54bcd8715eee62d40e33596ef5e8f0f48dbbccab # v4.1.0
        if: inputs.run-codecov && matrix.go == 'stable'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
