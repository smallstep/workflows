on:
  workflow_call:
    inputs:
      os-dependencies:
        required: false
        type: string
      make-test:
        required: false
        type: boolean
      only-latest-golang:
        required: false
        type: boolean
        default: false
    secrets:
      SSH_PRIVATE_KEY:
        required: false
      PAT:
        required: false
      CODECOV_TOKEN:
        required: false

jobs:
  set-go-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-output.outputs.matrix }}
    steps:
      - name: Set go-matrix latest version
        id: set-matrix-latest
        if: inputs.only-latest-golang
        run: |
          echo "matrix={\"include\":[{\"go\":\"stable\"}]}" >> ${GITHUB_ENV}
      - name: Set default go-matrix
        id: set-matrix-default
        if: inputs.only-latest-golang == false
        run: |
          echo "matrix={\"include\":[{\"go\":\"oldstable\"},{\"go\":\"stable\"}]}" >> ${GITHUB_ENV}
      - id: set-output
        run: |
          echo "matrix=${{ env.matrix }}" >> ${GITHUB_OUTPUT}

  test:
    needs: set-go-matrix
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: go.step.sm
    strategy:
      matrix: ${{ fromJson(needs.set-go-matrix.outputs.matrix) }}
    steps:
      - name: Install Dependencies
        if: inputs.os-dependencies != ''
        run: |
          sudo apt-get install ${{ inputs.os-dependencies }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Reconfigure for Git go.step.sm
        env:
          PAT: ${{ secrets.PAT }}
        if: env.PAT != ''
        run: |
          git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf git+ssh://git@github.com
          git config --global url.git@github.com:.insteadOf https://github.com/
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
          cache: true
      - name: Setup SSH key for private dependencies
        uses: webfactory/ssh-agent@v0.7.0
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        if: env.SSH_PRIVATE_KEY != ''
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install gotestsum
        run: |
          go install gotest.tools/gotestsum@v1.8.1
      - name: Run Default Test Suite
        if: inputs.make-test == false
        run: |
          gotestsum -- -coverpkg=./... -coverprofile=coverage.out -covermode=atomic ./...
        env:
          GOTESTSUM_JSONFILE: gotestsum.json
      - name: Run make test
        if: inputs.make-test
        run: make test
      - name: Annotate Test Suite Results
        if: ${{ (success() || failure()) && hashFiles('gotestsum.json') != '' }}
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: gotestsum.json
      - name: Codecov
        uses: codecov/codecov-action@v3
        if: matrix.go == '1.20'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
