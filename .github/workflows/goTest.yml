on:
  workflow_call:
    inputs:
      os-dependencies:
        required: false
        type: string
      make-test:
        required: false
        type: boolean
    secrets:
      SSH_PRIVATE_KEY:
        required: false
      PAT:
        required: false
      CODECOV_TOKEN:
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: go.step.sm
    strategy:
      matrix:
        go: ['1.18', '1.19']
    steps:
      - name: Install Dependencies
        if: ${{ inputs.os-dependencies != '' }}
        run: |
          sudo apt-get install ${{ inputs.os-dependencies }}
      - name: Setup SSH key for private dependencies
        uses: webfactory/ssh-agent@v0.5.3
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        if: ${{ env.SSH_PRIVATE_KEY != '' }}
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Reconfigure Git go.step.sm
        env:
          PAT: ${{ secrets.PAT }}
        if: ${{ env.PAT != '' }}
        run: |
          git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf git+ssh://git@github.com
          git config --global url.git@github.com:.insteadOf https://github.com/
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
          cache: true
      - name: Install gotestsum
        run: |
          go install gotest.tools/gotestsum@v1.8.1
      - name: Run Default Test Suite
        if: inputs.make-test == false
        run: |
          gotestsum -- -coverprofile=coverage.out -covermode=atomic ./...
        env:
          GOTESTSUM_JSONFILE: gotestsum.json
      - name: Run make test
        if: inputs.make-test
        run: make test
      - name: Annotate Test Suite Results
        if: ${{ (success() || failure()) && hashFiles('gotestsum.json') != '' }}
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: gotestsum.json
      - name: Codecov
        uses: codecov/codecov-action@v3
        if: matrix.go == '1.19'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
