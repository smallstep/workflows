on:
  workflow_call:
    inputs:
      goprivate:
        required: false
        type: string
        default: go.step.sm,github.com/smallstep
      gotestsum-version:
        required: false
        type: string
        default: '1.12.3'
      only-latest-golang:
        required: false
        type: boolean
        default: true
      os-dependencies:
        required: false
        type: string
      run-codecov:
        required: false
        type: boolean
        default: true
      setup-bats:
        required: false
        type: boolean
        default: false
      test-command:
        required: false
        type: string
        default: 'gotestsum -- -coverpkg=./... -coverprofile=coverage.out -covermode=atomic ./...'
    secrets:
      SSH_PRIVATE_KEY:
        required: false
      PAT:
        required: false
      CODECOV_TOKEN:
        required: false

jobs:
  set-go-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-output.outputs.matrix }}
    steps:
      -
        name: Set go-matrix latest version
        id: set-matrix-latest
        if: inputs.only-latest-golang
        run: |
          echo 'matrix={"include":[{"go":"\"stable\""}]}' >> "${GITHUB_ENV}"
      -
        name: Set default go-matrix
        id: set-matrix-default
        if: inputs.only-latest-golang == false
        run: |
          echo 'matrix={"include":[{"go":"\"stable\""},{"go":"\"oldstable\""}]}' >> "${GITHUB_ENV}"
      -
        id: set-output
        run: |
          echo "matrix=${{ env.matrix }}" >> "${GITHUB_OUTPUT}"

  test:
    needs: set-go-matrix
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: ${{ inputs.goprivate }}
    strategy:
      matrix: ${{ fromJson(needs.set-go-matrix.outputs.matrix) }}
    steps:
      -
        name: Install Dependencies
        if: inputs.os-dependencies != ''
        run: |
          sudo apt-get update
          sudo apt-get install ${{ inputs.os-dependencies }}
      -
        name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
      -
        name: Reconfigure for Git go.step.sm
        env:
          PAT: ${{ secrets.PAT }}
        if: env.PAT != ''
        run: |
          git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf git+ssh://git@github.com
          git config --global url.git@github.com:.insteadOf https://github.com/
      -
        name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 'stable'
          check-latest: true
          cache: false
      -
        name: go mod download
        run: |
          go mod download
#      -
#        name: Action Cache
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.cache/go-build
#            ~/go/pkg/mod
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
      -
        name: Setup SSH key for private dependencies
        uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        if: env.SSH_PRIVATE_KEY != ''
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}
      -
        name: Install gotestsum
        run: |
          go install gotest.tools/gotestsum@v${{ inputs.gotestsum-version }}
      -
        name: Setup BATS
        if: inputs.setup-bats
        uses: mig4/setup-bats@af9a00deb21b5d795cabfeaa8d9060410377686d # v1.2.0
        with:
          bats-version: 1.9.0
      -
        name: Run Test Suite
        run: ${{ inputs.test-command }}
        env:
          GOTESTSUM_JSONFILE: gotestsum.json

      -
        name: Annotate Test Suite Results
        if: ${{ (success() || failure()) && hashFiles('gotestsum.json') != '' }}
        uses: guyarb/golang-test-annotations@2941118d7ef622b1b3771d1ff6eae9e90659eb26 # v0.8.0
        with:
          test-results: gotestsum.json
      -
        name: Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        if: inputs.run-codecov && matrix.go == 'stable'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
